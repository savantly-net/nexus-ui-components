export const nexusThemeConfig = {
  colors: {
    primary: {
      DEFAULT: "rgb(var(--tw-color-primary) / <alpha-value>)",
      50: "rgb(var(--tw-color-primary-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-primary-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-primary-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-primary-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-primary-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-primary-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-primary-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-primary-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-primary-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-primary-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-primary-950) / <alpha-value>)",
    },
    "primary-text": "rgb(var(--tw-color-primary-text) / <alpha-value>)",
    secondary: {
      DEFAULT: "rgb(var(--tw-color-secondary) / <alpha-value>)",
      50: "rgb(var(--tw-color-secondary-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-secondary-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-secondary-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-secondary-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-secondary-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-secondary-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-secondary-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-secondary-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-secondary-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-secondary-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-secondary-950) / <alpha-value>)",
    },
    "secondary-text": "rgb(var(--tw-color-secondary-text) / <alpha-value>)",
    tertiary: {
      DEFAULT: "rgb(var(--tw-color-tertiary) / <alpha-value>)",
      50: "rgb(var(--tw-color-tertiary-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-tertiary-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-tertiary-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-tertiary-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-tertiary-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-tertiary-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-tertiary-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-tertiary-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-tertiary-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-tertiary-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-tertiary-950) / <alpha-value>)",
    },
    "tertiary-text": "rgb(var(--tw-color-tertiary-text) / <alpha-value>)",
    success: {
      DEFAULT: "rgb(var(--tw-color-success) / <alpha-value>)",
      50: "rgb(var(--tw-color-success-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-success-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-success-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-success-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-success-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-success-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-success-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-success-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-success-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-success-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-success-950) / <alpha-value>)",
    },
    "success-text": "rgb(var(--tw-color-success-text) / <alpha-value>)",
    danger: {
      DEFAULT: "rgb(var(--tw-color-danger) / <alpha-value>)",
      50: "rgb(var(--tw-color-danger-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-danger-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-danger-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-danger-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-danger-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-danger-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-danger-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-danger-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-danger-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-danger-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-danger-950) / <alpha-value>)",
    },
    "danger-text": "rgb(var(--tw-color-danger-text) / <alpha-value>)",
    warning: {
      DEFAULT: "rgb(var(--tw-color-warning) / <alpha-value>)",
      50: "rgb(var(--tw-color-warning-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-warning-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-warning-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-warning-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-warning-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-warning-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-warning-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-warning-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-warning-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-warning-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-warning-950) / <alpha-value>)",
    },
    "warning-text": "rgb(var(--tw-color-warning-text) / <alpha-value>)",
    info: {
      DEFAULT: "rgb(var(--tw-color-info) / <alpha-value>)",
      50: "rgb(var(--tw-color-info-50) / <alpha-value>)",
      100: "rgb(var(--tw-color-info-100) / <alpha-value>)",
      200: "rgb(var(--tw-color-info-200) / <alpha-value>)",
      300: "rgb(var(--tw-color-info-300) / <alpha-value>)",
      400: "rgb(var(--tw-color-info-400) / <alpha-value>)",
      500: "rgb(var(--tw-color-info-500) / <alpha-value>)",
      600: "rgb(var(--tw-color-info-600) / <alpha-value>)",
      700: "rgb(var(--tw-color-info-700) / <alpha-value>)",
      800: "rgb(var(--tw-color-info-800) / <alpha-value>)",
      900: "rgb(var(--tw-color-info-900) / <alpha-value>)",
      950: "rgb(var(--tw-color-info-950) / <alpha-value>)",
    },
    "info-text": "rgb(var(--tw-color-info-text) / <alpha-value>)",
    light: {
      DEFAULT: "rgb(var(--tw-color-light) / <alpha-value>)",
    },
    "light-text": "rgb(var(--tw-color-light-text) / <alpha-value>)",
    dark: {
      DEFAULT: "rgb(var(--tw-color-dark) / <alpha-value>)",
    },
    "dark-text": "rgb(var(--tw-color-dark-text) / <alpha-value>)",
  },
};
